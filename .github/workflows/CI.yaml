
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules
  BUILD_TYPE: Release

jobs:
  build:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - uses: actions/checkout@v2
      
    - name: cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{ github.workspace }}/${{ env.INSTALL_LOCATION }}
        key: ${{ runner.os }}-dependencies

    - name: configure
      run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/$INSTALL_LOCATION -DProject_ENABLE_CODE_COVERAGE=1 -DCMAKE_CXX_FLAGS=-fopenmp
      
    - name: build
      run: cmake --build build --config $BUILD_TYPE -j4

    - name: run tests
      run: |
        cd build
        ctest -C $BUILD_TYPE -VV

    - name: lcov
      uses: danielealbano/lcov-action@v4.1
      with:
        gcov_path: /usr/bin/gcov-9
        remove_patterns: 3rdparty,tests
    
    - name: Report build tool versions
      shell: bash
      run: |
        echo "lcov version: $(lcov --version)"

    - name: Code Coverage - Generation
      run: |
        cd ${{github.workspace}}/build
        lcov --gcov-tool ${{matrix.config.gcov}} --capture --directory . --exclude catch2 --output-file coverage.info
        lcov --gcov-tool ${{matrix.config.gcov}} --remove coverage.info '3rdparty/*' 'tests/*' '/usr/*' '_deps/*' --output-file coverage.info
        lcov --gcov-tool ${{matrix.config.gcov}} --list coverage.info

    - uses: codecov/codecov-action@v4
      with:
        files: ${{github.workspace}}/coverage.info
        name: cachegrand-server
        fail_ci_if_error: false
        verbose: true